name: Test and Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
#    - name: Install kpathsea
#      run: sudo apt install libkpathsea-dev
    - name: Build
      run: cd rustex && cargo build --release --target x86_64-unknown-linux-gnu
    - name: Build Java bridge
      run: cd rustexbridge && cargo build --release --target x86_64-unknown-linux-gnu
    - name: Install texlive
      run: sudo apt install texlive
    - name: Test latex.ltx
      run: cd rustex/target/x86_64-unknown-linux-gnu/release && ./rustex
  deploy_linux:
    runs-on: ubuntu-20.04
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cd rustex && cargo build --release --target x86_64-unknown-linux-gnu
    - name: Build Java bridge
      run: cd rustexbridge && cargo build --release --target x86_64-unknown-linux-gnu
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: |
          ./rustex/target/x86_64-unknown-linux-gnu/release/librustex.rlib
          ./rustex/target/x86_64-unknown-linux-gnu/release/librustex.so
          ./rustex/target/x86_64-unknown-linux-gnu/release/rustex
    - uses: actions/upload-artifact@v3
      with:
        name: bridge_linux
        path: ./rustexbridge/target/x86_64-unknown-linux-gnu/release/librustex_java.so
  deploy_windows:
    runs-on: windows-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
#    - name: Set up MinGW
#      uses: egor-tensin/setup-mingw@v2
#      with:
#        platform: x86
    - name: rustups
      run: rustup target add x86_64-pc-windows-msvc && rustup toolchain install stable-x86_64-pc-windows-msvc #i686-pc-windows-gnu && rustup toolchain install stable-i686-pc-windows-gnu
    - name: Build
      run: cd rustex && cargo build --release --target x86_64-pc-windows-msvc
    - name: Build Java bridge
      run: cd rustexbridge && cargo build --release --target x86_64-pc-windows-msvc
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: windows
        path: |
          ./rustex/target/x86_64-pc-windows-msvc/release/librustex.rlib
          ./rustex/target/x86_64-pc-windows-msvc/release/rustex.dll
          ./rustex/target/x86_64-pc-windows-msvc/release/rustex.dll.lib
          ./rustex/target/x86_64-pc-windows-msvc/release/rustex.exe
    - uses: actions/upload-artifact@v3
      with:
        name: bridge_windows
        path: ./rustexbridge/target/x86_64-pc-windows-msvc/release/rustex_java.dll
  deploy_mac:
    runs-on: macos-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: rustups
      run: rustup target add x86_64-apple-darwin && rustup toolchain install stable-x86_64-apple-darwin
    - name: Build
      run: cd rustex && cargo build --release --target x86_64-apple-darwin
    - name: Build Java bridge
      run: cd rustexbridge && cargo build --release --target x86_64-apple-darwin
    - name: Upload Mac
      uses: actions/upload-artifact@v3
      with:
        name: mac
        path: |
          ./rustex/target/x86_64-apple-darwin/release/librustex.rlib
          ./rustex/target/x86_64-apple-darwin/release/librustex.dylib
          ./rustex/target/x86_64-apple-darwin/release/rustex
    - uses: actions/upload-artifact@v3
      with:
        name: bridge_mac
        path: ./rustexbridge/target/x86_64-apple-darwin/release/librustex_java.dylib
  release:
    needs: [deploy_linux,deploy_windows,deploy_mac]
    runs-on: ubuntu-20.04
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: bridge_linux
          path: ./
      - uses: actions/download-artifact@v2
        with:
          name: bridge_windows
          path: ./
      - uses: actions/download-artifact@v2
        with:
          name: bridge_mac
          path: ./
      - uses: actions/download-artifact@v2
        with:
          name: linux
          path: ./linux
      - uses: actions/download-artifact@v2
        with:
          name: windows
          path: ./windows
      - uses: actions/download-artifact@v2
        with:
          name: mac
          path: ./mac
      - uses: vimtor/action-zip@v1
        with:
          files: linux/
          dest: linux.zip
      - uses: vimtor/action-zip@v1
        with:
          files: windows/
          dest: windows.zip
      - uses: vimtor/action-zip@v1
        with:
          files: mac/
          dest: mac.zip
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: main
          files: |
            ./linux.zip
            ./windows.zip
            ./mac.zip
            ./librustex_java.so
            ./rustex_java.dll
            ./librustex_java.dylib
