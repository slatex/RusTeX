name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
#    - name: Install kpathsea
#      run: sudo apt install libkpathsea-dev
    - name: Build
      run: cd rustex && cargo build --release --target x86_64-unknown-linux-gnu
    - name: Install texlive
      run: sudo apt install texlive
    - name: Test latex.ltx
      run: cd rustex/target/x86_64-unknown-linux-gnu/release && ./rustex
  deploy_linux:
    runs-on: ubuntu-18.04
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: Deploy Linux
      run: cd rustex && cargo build --release --target x86_64-unknown-linux-gnu
    - name: Upload Linux
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: |
          ./rustex/target/x86_64-unknown-linux-gnu/release/librustex.rlib
          ./rustex/target/x86_64-unknown-linux-gnu/release/librustex.so
          ./rustex/target/x86_64-unknown-linux-gnu/release/rustex
  deploy_windows:
    runs-on: windows-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
#    - name: Install Tools
#      run: sudo apt install mingw-w64 # libkpathsea-dev
    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x86
    - name: rustups
      run: rustup target add i686-pc-windows-gnu && rustup toolchain install stable-i686-pc-windows-gnu
    - name: Deploy Windows
      run: cd rustex && cargo build --release --target i686-pc-windows-gnu
    - name: Upload Windows
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: |
          ./rustex/target/i686-pc-windows-gnu/release/librustex.rlib
          ./rustex/target/i686-pc-windows-gnu/release/rustex.dll
          ./rustex/target/i686-pc-windows-gnu/release/rustex.dll.lib
          ./rustex/target/i686-pc-windows-gnu/release/rustex.exe
  deploy_mac:
    runs-on: macos-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: rustups
      run: rustup target add x86_64-apple-darwin && rustup toolchain install stable-x86_64-apple-darwin
    - name: Deploy Mac
      run: cd rustex && cargo build --release --target x86_64-apple-darwin
    - name: Upload Mac
      uses: actions/upload-artifact@v2
      with:
        name: mac
        path: |
          ./rustex/target/x86_64-apple-darwin/release/librustex.rlib
          ./rustex/target/x86_64-apple-darwin/release/librustex.dylib
          ./rustex/target/x86_64-apple-darwin/release/rustex
